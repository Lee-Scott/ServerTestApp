{"ast":null,"code":"import { BehaviorSubject, of } from 'rxjs';\nimport { catchError, map, startWith } from 'rxjs/operators';\nimport { DataState } from './enum/data-state.enum';\nimport { Status } from './enum/status.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./service/server.service\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_ng_container_25_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 33);\n    i0.ɵɵelement(2, \"div\", 34);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction AppComponent_ng_container_25_ng_container_2_tbody_20_i_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"i\", 44);\n    i0.ɵɵtext(1, \"\\uE328\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AppComponent_ng_container_25_ng_container_2_tbody_20_i_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 45);\n  }\n}\nconst _c0 = function (a0) {\n  return [a0];\n};\nfunction AppComponent_ng_container_25_ng_container_2_tbody_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tbody\")(1, \"tr\")(2, \"td\");\n    i0.ɵɵelement(3, \"img\", 37);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"td\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"td\");\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"td\")(13, \"span\", 38);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(15, \"td\")(16, \"a\", 39);\n    i0.ɵɵlistener(\"click\", function AppComponent_ng_container_25_ng_container_2_tbody_20_Template_a_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r11);\n      const server_r6 = restoredCtx.$implicit;\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r10.pingServer(server_r6.ipAddress));\n    });\n    i0.ɵɵtemplate(17, AppComponent_ng_container_25_ng_container_2_tbody_20_i_17_Template, 2, 0, \"i\", 40);\n    i0.ɵɵpipe(18, \"async\");\n    i0.ɵɵpipe(19, \"async\");\n    i0.ɵɵtemplate(20, AppComponent_ng_container_25_ng_container_2_tbody_20_i_20_Template, 1, 0, \"i\", 41);\n    i0.ɵɵpipe(21, \"async\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"td\")(23, \"a\", 42)(24, \"i\", 43);\n    i0.ɵɵtext(25, \"\\uE872\");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const server_r6 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"src\", server_r6.imageUrl, i0.ɵɵsanitizeUrl)(\"alt\", server_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r6.ipAddress);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r6.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r6.memory);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(server_r6.type);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(16, _c0, server_r6.status === ctx_r5.Status.SERVER_UP ? \" badge-success\" : \" badge-danger\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", server_r6.status === ctx_r5.Status.SERVER_UP ? \"SERVER UP\" : \"SERVER DOWN\", \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(18, 10, ctx_r5.filterStatus$) === \"\" || i0.ɵɵpipeBind1(19, 12, ctx_r5.filterStatus$) !== server_r6.ipAddress);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 14, ctx_r5.filterStatus$) === server_r6.ipAddress);\n  }\n}\nfunction AppComponent_ng_container_25_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"table\", 35)(2, \"thead\")(3, \"tr\")(4, \"th\");\n    i0.ɵɵtext(5, \"Image\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"th\");\n    i0.ɵɵtext(7, \"IP Address\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"th\");\n    i0.ɵɵtext(9, \"Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"th\");\n    i0.ɵɵtext(11, \"Memory\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"th\");\n    i0.ɵɵtext(13, \"Type\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"Status\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"Ping\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Actions\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(20, AppComponent_ng_container_25_ng_container_2_tbody_20_Template, 26, 18, \"tbody\", 36);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const appState_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(20);\n    i0.ɵɵproperty(\"ngForOf\", appState_r1.appData.data.servers);\n  }\n}\nfunction AppComponent_ng_container_25_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 46);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const appState_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", appState_r1.error, \" \");\n  }\n}\nfunction AppComponent_ng_container_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 31);\n    i0.ɵɵtemplate(1, AppComponent_ng_container_25_ng_container_1_Template, 3, 0, \"ng-container\", 32);\n    i0.ɵɵtemplate(2, AppComponent_ng_container_25_ng_container_2_Template, 21, 1, \"ng-container\", 32);\n    i0.ɵɵtemplate(3, AppComponent_ng_container_25_ng_container_3_Template, 3, 1, \"ng-container\", 32);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const appState_r1 = ctx.ngIf;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngSwitch\", appState_r1.dataState);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.LOADING_STATE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.LOADED_STATE);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r0.DataState.ERROR_STATE);\n  }\n}\nexport class AppComponent {\n  constructor(serverService) {\n    this.serverService = serverService;\n    this.DataState = DataState;\n    this.Status = Status;\n    this.filterSubject = new BehaviorSubject('');\n    this.dataSubject = new BehaviorSubject(null);\n    this.filterStatus$ = this.filterSubject.asObservable();\n    this.isLoading = new BehaviorSubject(false);\n    this.isLoading$ = this.isLoading.asObservable();\n  } // injection \n  // like a runnable in java, runs on startup\n  ngOnInit() {\n    this.appState$ = this.serverService.server$ // subscribe this observable that makes a http request \n    .pipe(map(response => {\n      this.dataSubject.next(response); // save the response in the dataSubject for pingServer()\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: response\n      };\n    }), startWith({\n      dataState: DataState.LOADING_STATE\n    }),\n    // waiting for data so we omit response\n    catchError(error => {\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      }); // if we catch an error\n    }));\n  }\n\n  pingServer(ipAddress) {\n    this.filterSubject.next(ipAddress);\n    this.appState$ = this.serverService.ping$(ipAddress).pipe(map(response => {\n      const index = this.dataSubject.value.data.servers.findIndex(server => server.id === response['data.server.id']);\n      this.dataSubject.value.data.servers[index] = response['data.server'];\n      this.filterSubject.next('');\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: this.dataSubject.value\n      };\n    }), startWith({\n      dataState: DataState.LOADED_STATE,\n      appData: this.dataSubject.value\n    }), catchError(error => {\n      this.filterSubject.next('');\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n  // Not getting any new data from the backend because we already have it in response\n  filterServers(status) {\n    this.appState$ = this.serverService.filter$(status, this.dataSubject.value).pipe(map(response => {\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: response\n      };\n    }), startWith({\n      dataState: DataState.LOADED_STATE,\n      appData: this.dataSubject.value\n    }), catchError(error => {\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n  saveServer(serverForm) {\n    this.appState$ = this.serverService.save$(serverForm.value).pipe(map(response => {\n      this.dataSubject.next(Object.assign(Object.assign({}, response), {\n        data: {\n          servers: [response.data.server]\n        }\n      }));\n      return {\n        dataState: DataState.LOADED_STATE,\n        appData: this.dataSubject.value\n      };\n    }), startWith({\n      dataState: DataState.LOADED_STATE,\n      appData: this.dataSubject.value\n    }), catchError(error => {\n      this.filterSubject.next('');\n      return of({\n        dataState: DataState.ERROR_STATE,\n        error\n      });\n    }));\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.ServerService));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 72,\n  vars: 3,\n  consts: [[1, \"container-xl\"], [1, \"table-responsive\"], [1, \"table-wrapper\"], [1, \"table-title\"], [1, \"row\"], [1, \"col-sm-6\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\"], [\"href\", \"#addEmployeeModal\", \"data-toggle\", \"modal\", 1, \"btn\", \"btn-success\"], [1, \"material-icons\"], [\"ngModel\", \"ALL\", \"name\", \"status\", 1, \"btn\", \"btn-info\", 2, \"height\", \"32.91px\", 3, \"ngModelChange\"], [\"value\", \"ALL\"], [\"value\", \"SERVER_UP\"], [\"value\", \"SERVER_DOWN\"], [3, \"ngSwitch\", 4, \"ngIf\"], [\"id\", \"addEmployeeModal\", 1, \"modal\", \"fade\"], [1, \"modal-dialog\"], [1, \"modal-content\"], [1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"data-dismiss\", \"modal\", \"aria-hidden\", \"true\", 1, \"close\"], [1, \"modal-body\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"ipAddress\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\"], [1, \"col-xl-6\", \"col-lg-6\", \"col-md-6\", \"col-sm-6\", \"col-6\"], [\"type\", \"text\", \"name\", \"memory\", \"required\", \"\", 1, \"form-control\"], [\"type\", \"text\", \"name\", \"type\", \"required\", \"\", 1, \"form-control\"], [\"name\", \"status\", \"name\", \"status\", \"required\", \"\", 1, \"form-control\"], [1, \"modal-footer\"], [\"type\", \"button\", \"id\", \"closeModal\"], [\"type\", \"submit\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [1, \"col-md-12\", \"single-note-item\", \"text-center\"], [\"role\", \"status\", 1, \"spinner-border\", \"text-info\"], [\"id\", \"servers\", 1, \"table\", \"table-striped\", \"table-hover\"], [4, \"ngFor\", \"ngForOf\"], [\"width\", \"40\", \"height\", \"40\", 3, \"src\", \"alt\"], [1, \"badge\", 3, \"ngClass\"], [2, \"cursor\", \"pointer\", 3, \"click\"], [\"class\", \"material-icons\", \"title\", \"Ping server\", 4, \"ngIf\"], [\"class\", \"fa fa-spinner fa-spin\", \"style\", \"font-size:24px\", 4, \"ngIf\"], [\"data-toggle\", \"modal\", 1, \"delete\", 2, \"cursor\", \"pointer\"], [\"data-toggle\", \"tooltip\", \"title\", \"Delete\", 1, \"material-icons\"], [\"title\", \"Ping server\", 1, \"material-icons\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\", 2, \"font-size\", \"24px\"], [1, \"alert-danger\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"h2\");\n      i0.ɵɵtext(7, \"Manage Servers\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"button\", 6);\n      i0.ɵɵtext(10, \"Print Report\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"a\", 7)(12, \"i\", 8);\n      i0.ɵɵtext(13, \"\\uE147\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"span\");\n      i0.ɵɵtext(15, \"New Server\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(16, \"span\")(17, \"select\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_select_ngModelChange_17_listener($event) {\n        return ctx.filterServers($event);\n      });\n      i0.ɵɵelementStart(18, \"option\", 10);\n      i0.ɵɵtext(19, \"ALL\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"option\", 11);\n      i0.ɵɵtext(21, \"SERVER UP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"option\", 12);\n      i0.ɵɵtext(23, \"SERVER DOWN\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelement(24, \"br\");\n      i0.ɵɵtemplate(25, AppComponent_ng_container_25_Template, 4, 4, \"ng-container\", 13);\n      i0.ɵɵpipe(26, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(27, \"div\", 14)(28, \"div\", 15)(29, \"div\", 16)(30, \"form\")(31, \"div\", 17)(32, \"h4\", 18);\n      i0.ɵɵtext(33, \"Add Server\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(34, \"button\", 19);\n      i0.ɵɵtext(35, \"\\u00D7\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(36, \"div\", 20)(37, \"div\", 21)(38, \"label\");\n      i0.ɵɵtext(39, \"IP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(40, \"input\", 22);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(41, \"div\", 21)(42, \"label\");\n      i0.ɵɵtext(43, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(44, \"input\", 23);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"div\", 4)(46, \"div\", 24)(47, \"div\", 21)(48, \"label\");\n      i0.ɵɵtext(49, \"Memory\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(50, \"input\", 25);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(51, \"div\", 24)(52, \"div\", 21)(53, \"label\");\n      i0.ɵɵtext(54, \"Type\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(55, \"input\", 26);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(56, \"div\", 21)(57, \"label\");\n      i0.ɵɵtext(58, \"Status\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(59, \"select\", 27)(60, \"option\", 11);\n      i0.ɵɵtext(61, \"SERVER UP\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(62, \"option\", 12);\n      i0.ɵɵtext(63, \"SERVER DOWN\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(64, \"div\", 28)(65, \"button\", 29);\n      i0.ɵɵtext(66, \" Cancel \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(67, \"button\", 30);\n      i0.ɵɵelement(68, \"i\")(69, \"span\");\n      i0.ɵɵelementStart(70, \"span\");\n      i0.ɵɵtext(71, \"Add\");\n      i0.ɵɵelementEnd()()()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(25);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(26, 1, ctx.appState$));\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf, i2.NgSwitch, i2.NgSwitchCase, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"],\n  changeDetection: 0\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","of","catchError","map","startWith","DataState","Status","i0","AppComponent","constructor","serverService","filterSubject","asObservable","isLoading","ngOnInit","appState$","server$","pipe","response","dataSubject","next","dataState","LOADED_STATE","appData","LOADING_STATE","error","ERROR_STATE","pingServer","ipAddress","ping$","index","value","data","servers","findIndex","server","id","filterServers","status","filter$","saveServer","serverForm","save$","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\lhs49\\Desktop\\Playspace\\reactive-spring\\serverapp\\src\\app\\app.component.ts","C:\\Users\\lhs49\\Desktop\\Playspace\\reactive-spring\\serverapp\\src\\app\\app.component.html"],"sourcesContent":["import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { BehaviorSubject, Observable, of } from 'rxjs';\nimport { catchError, map, startWith } from 'rxjs/operators';\nimport { DataState } from './enum/data-state.enum';\nimport { Status } from './enum/status.enum';\nimport { AppState } from './interface/app-state';\nimport { CustomResponse } from './interface/custom-response';\nimport { Server } from './interface/server';\n\nimport { ServerService } from './service/server.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AppComponent implements OnInit{\n  appState$: Observable<AppState<CustomResponse>>;\n  readonly DataState = DataState;\n  readonly Status = Status;\n  private filterSubject = new BehaviorSubject<string>('');\n  private dataSubject = new BehaviorSubject<CustomResponse>(null);\n  filterStatus$ = this.filterSubject.asObservable();\n  private isLoading = new BehaviorSubject<boolean>(false);\n  isLoading$ = this.isLoading.asObservable();\n\n\n  constructor(private serverService: ServerService){} // injection \n\n  // like a runnable in java, runs on startup\n  ngOnInit(): void {\n    this.appState$ = this.serverService.server$ // subscribe this observable that makes a http request \n    .pipe(\n      map(response => { // callback when ever there is a response from the server\n        this.dataSubject.next(response) // save the response in the dataSubject for pingServer()\n        return { dataState: DataState.LOADED_STATE, appData: response}\n      }),\n      startWith({dataState: DataState.LOADING_STATE}), // waiting for data so we omit response\n      catchError((error: string) => {\n        return of ({dataState: DataState.ERROR_STATE, error }) // if we catch an error\n      })\n    );\n  }\n\n  pingServer(ipAddress: string): void {\n    this.filterSubject.next(ipAddress);\n    this.appState$ = this.serverService.ping$(ipAddress)\n      .pipe(\n        map(response => {\n          const index = this.dataSubject.value.data.servers.findIndex(server =>  server.id === response['data.server.id']);\n          this.dataSubject.value.data.servers[index] = response['data.server'];\n          this.filterSubject.next('');\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.filterSubject.next('');\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  // Not getting any new data from the backend because we already have it in response\n\n  filterServers(status: Status): void {\n    \n    this.appState$ = this.serverService.filter$(status, this.dataSubject.value)\n      .pipe(\n        map(response => {\n          return { dataState: DataState.LOADED_STATE, appData: response }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          \n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n\n  saveServer(serverForm: NgForm): void {\n    \n    this.appState$ = this.serverService.save$(<Server> serverForm.value)\n      .pipe(\n        map(response => {\n          this.dataSubject.next(\n            {...response as CustomResponse, data: { servers: [response.data.server] } }\n          );\n          return { dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }\n        }),\n        startWith({ dataState: DataState.LOADED_STATE, appData: this.dataSubject.value }),\n        catchError((error: string) => {\n          this.filterSubject.next('');\n          return of({ dataState: DataState.ERROR_STATE, error });\n        })\n      );\n  }\n  \n\n\n}\n","<!-- <div>{{ appState$ | async | json }}</div> -->\r\n<div class=\"container-xl\">\r\n    <div class=\"table-responsive\">\r\n        <div class=\"table-wrapper\">\r\n            <div class=\"table-title\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-sm-6\">\r\n                        <h2>Manage Servers</h2>\r\n                    </div>\r\n                    <div class=\"col-sm-6\">\r\n                        <button type=\"button\" class=\"btn btn-primary\">Print Report</button>\r\n  \r\n                        <a href=\"#addEmployeeModal\" class=\"btn btn-success\" data-toggle=\"modal\">\r\n                            <i class=\"material-icons\">&#xE147;</i>\r\n                            <span>New Server</span>\r\n                        </a>\r\n  \r\n                        <span>\r\n                            <select (ngModelChange)=\"filterServers($any($event))\" ngModel=\"ALL\" name=\"status\" \r\n                                class=\"btn btn-info\" style=\"height: 32.91px;\">\r\n                                <option value=\"ALL\">ALL</option>\r\n                                <option value=\"SERVER_UP\">SERVER UP</option>\r\n                                <option value=\"SERVER_DOWN\">SERVER DOWN</option>\r\n                            </select>\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div> <br>\r\n            <ng-container *ngIf=\"(appState$ | async) as appState\" [ngSwitch]=\"appState.dataState\">\r\n                <ng-container *ngSwitchCase=\"DataState.LOADING_STATE\">\r\n                    <div class=\"col-md-12 single-note-item text-center\">\r\n                        <div class=\"spinner-border text-info\" role=\"status\"></div>\r\n                    </div>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase=\"DataState.LOADED_STATE\">\r\n                    <table class=\"table table-striped table-hover\" id=\"servers\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>Image</th>\r\n                                <th>IP Address</th>\r\n                                <th>Name</th>\r\n                                <th>Memory</th>\r\n                                <th>Type</th>\r\n                                <th>Status</th>\r\n                                <th>Ping</th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody *ngFor=\"let server of appState.appData.data.servers; let i = index\">\r\n                            <tr>\r\n                                <td> <img [src]=\"server.imageUrl\" [alt]=\"server.name\" width=\"40\" height=\"40\"></td>\r\n                                <td>{{ server.ipAddress }}</td>\r\n                                <td>{{ server.name }}</td>\r\n                                <td>{{ server.memory }}</td>\r\n                                <td>{{ server.type }}</td>  \r\n                                <td>\r\n                                    <span class=\"badge\" \r\n                                    [ngClass]=\"[server.status === Status.SERVER_UP ? ' badge-success' : ' badge-danger']\">\r\n                                      {{ server.status === Status.SERVER_UP ? 'SERVER UP' : 'SERVER DOWN' }}\r\n                                    </span>\r\n                                </td> \r\n                                \r\n                                <td>\r\n                                    <a (click)=\"pingServer(server.ipAddress)\" style=\"cursor: pointer;\">\r\n                                        <i *ngIf=\"(filterStatus$ | async) === '' || (filterStatus$ | async) !== server.ipAddress\" \r\n                                            class=\"material-icons\" title=\"Ping server\">&#xe328;</i>\r\n                                        <i *ngIf=\"(filterStatus$ | async) === server.ipAddress\" \r\n                                            class=\"fa fa-spinner fa-spin\" style=\"font-size:24px\"></i>\r\n                                    </a>\r\n                                </td>\r\n                                <td>\r\n                                    <a class=\"delete\" data-toggle=\"modal\"\r\n                                        style=\"cursor: pointer;\"><i class=\"material-icons\" data-toggle=\"tooltip\"\r\n                                            title=\"Delete\">&#xE872;</i></a>\r\n                                </td>\r\n                        </tbody>\r\n                    </table>\r\n                </ng-container>\r\n                <ng-container *ngSwitchCase=\"DataState.ERROR_STATE\">\r\n                    <div class=\"alert-danger\">\r\n                            {{ appState.error }}\r\n                    </div>\r\n                </ng-container>\r\n            </ng-container>\r\n        </div>\r\n    </div>\r\n  </div>\r\n  \r\n  <!-- Add server Modal HTML -->\r\n  <div id=\"addEmployeeModal\" class=\"modal fade\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <form >\r\n                <div class=\"modal-header\">\r\n                    <h4 class=\"modal-title\">Add Server</h4>\r\n                    <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-hidden=\"true\">&times;</button>\r\n                </div>\r\n                <div class=\"modal-body\">\r\n                    <div class=\"form-group\">\r\n                        <label>IP</label>\r\n                        <input type=\"text\" name=\"ipAddress\" class=\"form-control\" required>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Name</label>\r\n                        <input type=\"text\" name=\"name\" class=\"form-control\" required>\r\n                    </div>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>Memory</label>\r\n                                <input type=\"text\" name=\"memory\" class=\"form-control\" required>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-xl-6 col-lg-6 col-md-6 col-sm-6 col-6\">\r\n                            <div class=\"form-group\">\r\n                                <label>Type</label>\r\n                                <input type=\"text\" name=\"type\" class=\"form-control\" required>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                        <label>Status</label>\r\n                        <select name=\"status\" class=\"form-control\" name=\"status\" required>\r\n                            <option value=\"SERVER_UP\">SERVER UP</option>\r\n                            <option value=\"SERVER_DOWN\">SERVER DOWN</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n                <div class=\"modal-footer\">\r\n                    <button type=\"button\"  id=\"closeModal\" >\r\n                        Cancel\r\n                    </button>\r\n                    <button type=\"submit\" >\r\n                        <i ></i>\r\n                        <span></span> \r\n                        <span >Add</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n  </div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}