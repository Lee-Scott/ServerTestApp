{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"angular-notifier\";\nexport class NotificationService {\n  constructor(notifierService) {\n    this.notifier = notifierService;\n  }\n  onDefault(message) {\n    this.notifier.notify(Type.DEFAULT, message);\n  }\n  onSuccess(message) {\n    this.notifier.notify(Type.SUCCESS, message);\n  }\n  onInfo(message) {\n    this.notifier.notify(Type.INFO, message);\n  }\n  onWarning(message) {\n    this.notifier.notify(Type.WARNING, message);\n  }\n  onError(message) {\n    this.notifier.notify(Type.ERROR, message);\n  }\n}\nNotificationService.ɵfac = function NotificationService_Factory(t) {\n  return new (t || NotificationService)(i0.ɵɵinject(i1.NotifierService));\n};\nNotificationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: NotificationService,\n  factory: NotificationService.ɵfac,\n  providedIn: 'root'\n});\nvar Type;\n(function (Type) {\n  Type[\"DEFAULT\"] = \"default\";\n  Type[\"INFO\"] = \"info\";\n  Type[\"SUCCESS\"] = \"success\";\n  Type[\"WARNING\"] = \"warning\";\n  Type[\"ERROR\"] = \"error\";\n})(Type || (Type = {}));\n;","map":{"version":3,"mappings":";;AAIA,OAAM,MAAOA,mBAAmB;EAG9BC,YAAYC,eAAgC;IAC1C,IAAI,CAACC,QAAQ,GAAGD,eAAe;EACjC;EAEAE,SAAS,CAACC,OAAe;IACvB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACC,OAAO,EAAEH,OAAO,CAAC;EAC7C;EAEAI,SAAS,CAACJ,OAAe;IACvB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACG,OAAO,EAAEL,OAAO,CAAC;EAC7C;EAEAM,MAAM,CAACN,OAAe;IACpB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACK,IAAI,EAAEP,OAAO,CAAC;EAC1C;EAEAQ,SAAS,CAACR,OAAe;IACvB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACO,OAAO,EAAET,OAAO,CAAC;EAC7C;EAEAU,OAAO,CAACV,OAAe;IACrB,IAAI,CAACF,QAAQ,CAACG,MAAM,CAACC,IAAI,CAACS,KAAK,EAAEX,OAAO,CAAC;EAC3C;;;mBAzBWL,mBAAmB;AAAA;;SAAnBA,mBAAmB;EAAAiB,SAAnBjB,mBAAmB;EAAAkB,YADN;AAAM;AA6BhC,IAAKX,IAMJ;AAND,WAAKA,IAAI;EACPA,2BAAmB;EACnBA,qBAAa;EACbA,2BAAmB;EACnBA,2BAAmB;EACnBA,uBAAe;AACjB,CAAC,EANIA,IAAI,KAAJA,IAAI;AAMR","names":["NotificationService","constructor","notifierService","notifier","onDefault","message","notify","Type","DEFAULT","onSuccess","SUCCESS","onInfo","INFO","onWarning","WARNING","onError","ERROR","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\lhs49\\Desktop\\Playspace\\reactive-spring\\serverapp\\src\\app\\service\\notification.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { NotifierService } from 'angular-notifier';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class NotificationService {\r\n  private readonly notifier: NotifierService;\r\n\r\n  constructor(notifierService: NotifierService) {\r\n    this.notifier = notifierService;\r\n  }\r\n\r\n  onDefault(message: string): void {\r\n    this.notifier.notify(Type.DEFAULT, message);\r\n  }\r\n\r\n  onSuccess(message: string): void {\r\n    this.notifier.notify(Type.SUCCESS, message);\r\n  }\r\n\r\n  onInfo(message: string): void {\r\n    this.notifier.notify(Type.INFO, message);\r\n  }\r\n\r\n  onWarning(message: string): void {\r\n    this.notifier.notify(Type.WARNING, message);\r\n  }\r\n\r\n  onError(message: string): void {\r\n    this.notifier.notify(Type.ERROR, message);\r\n  }\r\n}\r\n\r\nenum Type { \r\n  DEFAULT = 'default', \r\n  INFO = 'info', \r\n  SUCCESS = 'success', \r\n  WARNING = 'warning', \r\n  ERROR = 'error'\r\n};"]},"metadata":{},"sourceType":"module","externalDependencies":[]}